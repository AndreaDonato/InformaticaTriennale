{
	"nodes":[
		{"id":"45b932caa35cd5e2","type":"text","text":"# Rete (guarda slides) tipo intro ai termini\n\nrete = nodi (computer) collegati da collegamenti (link). Distinguo i nodi estremali (host (vuole usare il servizio) o server (lo fornisce), non è una distinzione rigida) e quelli di interconnessione (router collega due reti o switch collegano terminali in locale). Dispositivi che possono scambiarsi info. Durante i passaggi di info queste spesso si modificano (fisico, quindi amplificazione, o tenere traccia del passaggio. esistono anche trasmissioni trasparenti).\n\nperiferia della rete -> host e server\nrete di accesso: utenti (problemi: max utenti per antenna)\nnucleo di rete: router interconnessi che fanno interagire sottoreti indirizzando il traffico\n\n(guarda slides)\n\nreti via cavo: tutto collegato allo stesso cavo condiviso. ogni casa ha splitter e modem.\n\nasimmetria: ci si aspetta che l'host scarichi più di quanto carica\n\na casa modem, router e access point sono integrati nello stesso coso.\n\n\"half duplex\" -> mentre trasmetto non posso ricevere. Questo perché la potenza del segnale scende come 1/r^2, e chi riceve vede un segnale debole -> non può trasmettere a sua volta, perché copro il segnale debole. Questo per il wifi e simili, su cavo faccio come voglio.\n\nSu LAN ho indirizzo MAC (?). All'inizio usavo unico cavo a cui si collegavano tutti -> interferenze (e vedo il traffico altrui, \"oggi se non se l'NSA non lo fai\"). Oggi uso gli switch (e c'è crittografia e altre cose).\n\nsplitting di frequenze (anche su stesso cavo) ha costo (multiplexing?), nell'esempio del cavo sopra (credo) sia tutto su stessa frequenza.\n\nLo switch può far connettere N host in parallelo che possono trasmettere insieme\n\nwan punto-punto collega due ret, a commutazione collega pù reti.\n\nse collego due LAN con una WAN punto-punto (E BASTA) ho creato un internet, ma è solo un pezzetto di Internet (tutte le reti).\n\n","x":-260,"y":-340,"width":780,"height":860},
		{"id":"38f42aa977e02595","type":"text","text":"# (\"... comunque lo vedremo meglio\")\n\nnon ci sono computer, solo router che fanno commutazione di pacchetto (= forwarding = switching: qualcosa entra da una porta, lo faccio uscire da un'altra, ognuno ha una tabella di corrispondenze, è na roba LOCALE). NON sa che percorso farà. Ma chi le scrive le tabelle? Serve sapere i percorsi -> serve Algoritmo di Instradamento. Il ROUTING è un'azione GLOBALE.\n\nforwarding: come mi devo mettere; routing: coreografia\n\nstore and forward: prima ricevo tutto, poi mando. na specie de buffering. Pushare il pacchetto nel cavo = trasmettere, ergo se devo mettere L bit di pacchetto a velocità R bit/s ci metto L/R secondi ed è detto ritardo di trasmissione (trasmissione è solo l'uploat del pacchetto nel collegamento (cavo), poi c'è delay di trasporto ma spesso è trascurabile). \"modulare il segnale nel cavo\". ogni router che trasmette (HOP) porta un ritardo +L/R. Se poi mi interessa il delay del segnale totale trasportato da N pacchetti moltiplico per N. Poi c'è ritardo di accodamento (vedi slides).\n\nTEORIA DELLE CODE???\n\nA - algoritmo per ottimizzare commutaizone di circuito?\n\nSe multiplexo sulle frequenze (costo alto) mitigo il problema delle code. Posso farlo anche sul tempo (costo minore, eg bluetooth), ma sono a rischio latenza. Qual è meglio? Dipende da che ci devo fare. Comm di circuito però non si usa su Internet. cellulari usano entrambi. pacchetto consente a più utenti di usare la rete. Internet è _bursty_, impulsiva, dati inframezzati da lunghi silenzi. Mi baso sul fatto che molti stanno zitti per permettere a più persone di parlare (e.g. se ho 35 utenti P(attivi>20) $\\sim$ poco, conto con binomiale). se uso comm circuito dedico una linea fissa e non sfrutto le \"caratteristiche\" degli utenti (che stanno spesso zitti).\n\nSe mando un pacchetto su Internet non ho garanzie che arrivi a destinazione. Tutti i tentativi per dare garanzie (ovvero strutturare diversamente i protocolli) hanno fallito miseramente. Comm di circuito garantisce, ma se non comunico spreco risorse. \"Internet è accettare che tutti provano e provare a risolvere quando si creano problemi\".\n\nISP punto debole di interet, in mano ai grandi fornitori. interconnessi, guidati dagli interessi aziendali più che geografici. Abbiamo milioni di ISP di accesso. Li collego tutti tra loro? No, è $O(n^2)$. Inizialmente: ISP di transito globale a fare da centralino (pagato da ISP locali). Ora ci sono tanti ISP globali collegati da IXP (internet exchange point, collegamento di peering). La rete degli IXP ha una rete dei content provider.\n\nSegue discorso sulla legislazione perché sta roba dà un sacco di potere\n\n","x":700,"y":-340,"width":640,"height":1120},
		{"id":"435d7ec357e56abd","type":"text","text":"# prestazioni slides 3\n\nthroughput è una misura a regime (un po' una misura del bitrate effettivo, ed è sistematicamente minore o uguale). è il flusso/portata della fluidodinamica. Non basta un ping (singolo bit, quello misura la latenza).\ncolli di bottiglia creano grossi problemi su internet, ma non nelle dorsali (backbone, sono enormi), quanto quelli che si collegano.\ntutto questo comunque resta molto teorico perché non considero perdite e ritardi, all'atto pratico misuro per sapere quant'è.\nSeguono i ritardi che sommati fanno la latenza\n- processamento (elaborazione del pacchetto: controllo errori, switching, ... tipicamente svariati odg meno degli altri)\n- Trasmissione (tutta  la dipendenza dalla grandezza del pacchetto è qua)\n- Accodamento (queuing delay, dipende dal traffico, difficile da calcolare, c'è teoria delle code)\n- propagazione (SOLO lunghezza del cavo, satellite 300ms, cavo oceanico 30ms)\n\ni primi bit caricati in trasmissione non devono aspettare gli ultimi. Infatti, se ho n bit e ognuno ci mette m secondi, l'ultimo verrà processato dopo nxm secondi. Ma intanto il primo è partito. Magari è pure arrivato all'altro router, il quale però deve aspettare di ricevere tutto il pacchetto per inoltrarlo.\nAttenzione a fare pacchetti troppo grossi, il ritardo di trasmissione schizza alle stelle. (posso cambiarlo su pc con la mia connessione???)\n\nSe sto trasmettendo un pacchetto enorme con bassa velocità ci metto un botto, il che blocca la rete per tutti!\n\n","x":700,"y":860,"width":640,"height":740},
		{"id":"c3e8022233e42700","type":"text","text":"# Ritardi\n\n- accodamento (\"quando siamo fortunati non possiamo portarci avanti col lavoro) rivedilo che non ho capito cosa vuole dire (vedi animazione di due slides dopo, perdita di pacchetti, mettendo stesso rate di emission e transmission) --> se si riempie la coda perdo pacchetti --> un pacchetto perso ha tempo di attesa infinito\n\nse ci stanno dei loop nel percorso router i pacchetti intrappolati restano all'infinito? Devo metterci un cut-off -> tempo di vita (TTL time to live), spesso espresso in \"quanti altri router possono inoltrarlo\". Se il pacchetto muore in genere il router manda un feedback a chi glielo ha inviato (\"hey, il tuo pacchetto è morto). Se mando TTL sempre crescenti stimo il percorso (non proprio, nessuno mi dice che faccio sempre lo stesso $\\forall$ invio).\nPer vari motivi i router possono non rispondere quando muore il pacchetto. Se accetto i TTL potrei far leakare la struttura interna della rete. Se il pacchetto arriva a coda piena viene scartato. La rete non è per niente gentile con i pacchetti, sta a me farlo arrivare. Pacchetti persi nel 99% dei casi sono code e strade sbagliate (per motivi) se parlo di dorsali. Nella periferia posso avere interferenze (e.g. wifi). TCP/IP capisce se è una perdita per traffico o casuale. Importante perché se perdo per traffico dovrei rallentare, altrimenti scialla.\n\n- rate\\*ritardo = numero massimo di bit nel buffer (-> definisce grandezza del buffer). volume del \"tubo\" di trasmissione. non utilissimo perché a me interessa il throughput, cioè la sezione\n\n","x":700,"y":1660,"width":640,"height":720},
		{"id":"4df27d69ac9764ca","type":"text","text":"# Protocolli\n\nA ogni livello corrisponde solo un protocollo.\n\nTendono ad essere più che altro descrittivi, un insieme di regole fenomenologiche che possono rompersi in qualsiasi momento.\n\nlayering dei protocolli -> slides\n\nsimilarità orizzontali gestite da protocollo omologo (e.g. protocollo per i biglietti, per le piste, per la gestione dei gate, ...)\n\npoi l'evoluzione è verticale, si scende e si risale (a livello di strati).\n\nOgni livello usa i propri servizi e quelli dei livelli più in superficie (tendenzialmente, magari anche di quello sotto, come detto sono regole fenomenologiche e descrittive)\n\nforse in questo caso intende che lo stesso protocollo ha input e output \"invertiti\" tra mittente e destinatario (o andata e ritorno in questo caso), ergo prendo dai livelli vicini.\n\nConcettualmente però non c'è INTERFERENZA tra i livelli. ... in teoria. in pratica succedono disastri vari\n\nIl layering mi permette di vedere i layer come black-box, si ricollega alla modularità\n\"avere protocolli aperti permette a tutti di competere\"\nin generale un layer offre servizi al livello superiore usando quelli del livello inferiore (gli output no?!)\n\nIl livello N prende il payload (mole di dati) del livello N-1 e gli aggiunge le proprie etichette (header, ...)\n\nSwitch non fa niente, router fa entrambe le cose\n","x":1480,"y":1660,"width":840,"height":720},
		{"id":"f6c22dc935238119","type":"text","text":"# Servizi e protocolli\n□ Sono concetti ben distinti\n□ Un servizio è un insieme di primitive che uno strato offre a quello\nsuperiore\nDefinisce quali operazioni lo strato è in grado di offrire, ma non\ndice nulla di come queste operazioni sono implementate\n❖ È correlato all’interfaccia tra due strati, dove quello inferiore è il provider\ndel servizio, mentre quello superiore è l’utente\n❖\n□\nUn protocollo è un insieme di regole che controllano il formato e il\nsignificato dei pacchetti, o messaggi scambiati tra le entità pari\nall’interno di uno strato\n\n\nServizio: ti garantisco che i pacchetti arriveranno in ordine, se si disordinano ci penso io a rimetterli a posto\nProtocollo: per connetterti con me devi fare A B C, ...\n\n\n\n","x":2480,"y":1660,"width":560,"height":700},
		{"id":"654ac28bb2976d51","type":"text","text":"# (De)Multiplexing\n\nTCP deve sapere se deve dare il pacchetto a FTP o HTTP. Demultiplexo con le porte. e.g. uso 80 per HTTP. Il multiplexing è: qualsiasi protocollo può mandare pacchetti a TCP, al quale non deve fregare niente del protocollo sovrastante.\n\nleggi: l'header deve identificare il protocollo, ma poi TCP fa lui.","x":1480,"y":2480,"width":620,"height":320},
		{"id":"887ef6414c582149","type":"text","text":"# Indirizzamento\n\nL'header deve contenere almeno mittente e destinatario. IP e MAC fanno riferimento a layer (protocolli) diversi.","x":2180,"y":2480,"width":460,"height":320},
		{"id":"5b4bbd10c0ed915d","x":2921,"y":2527,"width":739,"height":853,"type":"text","text":"# Sicurezza\n\nOSI bello ma mai stato implementato, la sicurezza sta all'applicazione\n\nQuasi tutti i governi fanno sniffing, anche se è crittografato.\nBanalmente ho i metadati, quindi posso risalire a chi parla (magari senza sapere cosa), ma posso mettermi ad ascoltare più \"vicino\" ai due che parlano. Se sei un governo puoi fare la qualunque, compreso con le crittografie (non tutto no? se faccio RSA col cazzo mi sa). Tecnicamente sniffing era attaccarmi col cavo (quando c'era un cavo per tutti) ma oggi dipende dalla tecnologia usata ed è un concetto astratto.\n\nPosso fare cose illegali in N (con N enorme) modi. Tipo, posso inviare pacchetti mettendo un mittente che non sono io (se mando la droga e metto come mittente qualcun altro quello non va in galera perché non è dimostrabile che l'ha mandato lui), oppure da router posso tenermi i pacchetti e leggerli, o inoltrarli a una macchina a mia scelta.\n\nContro queste cose c'è roba tipo\n- l'autenticazione\n- confidenzialità (crittografia)\n- autenticità\n- restrizioni di accesso (e.g. VPN protetta da password)\n- firewall (a livello di rete)\n\nCi sono attacchi diversi a seconda di\n- come reagisco alle richieste\n- come creo la connessione (e.g. TCP)\n- ...\n\nDi base si può fare tutto, è una giungla!\nSe mi fingo un altro comunque l'altro può trasmettere, a rigore dovrei anche preoccuparmi di bloccare quello che interpreto (man-in-the-middle).\n\n"}
	],
	"edges":[
		{"id":"7bc71d52a86d04fb","fromNode":"38f42aa977e02595","fromSide":"bottom","toNode":"435d7ec357e56abd","toSide":"top"},
		{"id":"a643d2b8a5ace49b","fromNode":"45b932caa35cd5e2","fromSide":"right","toNode":"38f42aa977e02595","toSide":"left"}
	]
}